##
## API Key Migration
apiKey:
  enabled: false

##
## Report Portal storage migration from multiple buckets to single bucket for S3 and MinIO
multiToSingle:
  enable: false
  ## Where will migration processing take place?
  storageType: minio
  # type: minio / s3
  removeAfterMigration: false
  bucket: 
    bucketPrefix: "prj-"
    ## bucket name for storing Plugins
    bucketForPlugins: "rp-bucket"
    ## A new single bucket to which the data will be migrated
    bucketSingleName: "rp-storage"

##
## Report Portal storage migration from single bucket MinIO to single bucket S3
singleMinioToSingleS3:
  enable: fasle
  bucket:
    fromMinioBucket: "rp-storage"
    toS3Bucket: "rp-s3-storage"

##
## Common values for migrations types. Which one to use read the documentation
## Ref: https://reportportal.io
minio:
  secretName: ""
  accesskey: <minio-accesskey>
  secretkey: <minio-secretkey>
  accesskeyName: "access-key"
  secretkeyName: "secret-key"
  endpoint: http://<minio-release-name>-minio.default.svc.cluster.local:9000
s3: 
  region: "us-west-3"
  secretName: ""
  accesskey: <s3-accesskey>
  secretkey: <s3-secretkey>
  accesskeyName: "s3-access-key"
  secretkeyName: "s3-secret-key"
  ## S3 enpoints ref: https://docs.aws.amazon.com/general/latest/gr/s3.html
  endpoint: http://s3.eu-west-3.amazonaws.com
database:
  secretName: ""
  passwordkKeyName: "postgresql-password"
  endpoint: <postgresql-release-name>-postgresql.default.svc.cluster.local
  port: 5432
  user: rpuser
  dbName: reportportal
  password:


image:
  repository: reportportal/migrations-complex
  tag: "1.0.0"
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 248Mi
service:
  type: ClusterIP
  port: 80
nodeSelector: {}
tolerations: []
affinity: {}
podAnnotations: {}
podSecurityContext: {}
  # fsGroup: 2000
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""